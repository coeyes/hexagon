package event{	import com.hexagonstar.io.file.types.IFile;	import flash.events.Event;		/**	 * FileParserEvent Class	 * @author Sascha Balkau <sascha@hexagonstar.com>	 */	public class FileParserEvent extends Event	{		////////////////////////////////////////////////////////////////////////////////////////		// Constants                                                                          //		////////////////////////////////////////////////////////////////////////////////////////				public static const COMPLETE:String = "fileParsingComplete";						////////////////////////////////////////////////////////////////////////////////////////		// Properties                                                                         //		////////////////////////////////////////////////////////////////////////////////////////				protected var _file:IFile;						////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Creates a new FileParserEvent instance.		 */		public function FileParserEvent(type:String,											file:IFile = null,											bubbles:Boolean = false,											cancelable:Boolean = false)		{			_file = file;			super(type, bubbles, cancelable);		}						/**		 * clone		 */		override public function clone():Event		{			return new FileParserEvent(type, _file, bubbles, cancelable);		}						////////////////////////////////////////////////////////////////////////////////////////		// Getters & Setters                                                                  //		////////////////////////////////////////////////////////////////////////////////////////				public function get file():IFile		{			return _file;		}		public function set file(v:IFile):void		{			_file = v;		}	}}