/* * hexcomps * Copyright (C) 2007 Hexagon Star Softworks * * ``The contents of this file are subject to the Mozilla Public License * Version 1.1 (the "License"); you may not use this file except in * compliance with the License. You may obtain a copy of the License at * http://www.mozilla.org/MPL/ * * Software distributed under the License is distributed on an "AS IS" * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the * License for the specific language governing rights and limitations * under the License. */package com.hexagonstar.flex.controls{	import mx.controls.CheckBox;	import mx.controls.dataGridClasses.DataGridListData;	import mx.controls.listClasses.ListBase;		import flash.display.DisplayObject;	import flash.events.KeyboardEvent;	import flash.events.MouseEvent;	import flash.text.TextField;			/**	 * CheckBoxDataGridItem Class	 * @author Sascha Balkau	 */	public class CheckBoxDataGridItem extends CheckBox	{		////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Creates a new CheckBoxDataGridItem instance.		 */		public function CheckBoxDataGridItem()		{			focusEnabled = false;		}						override public function set data(value:Object):void		{			super.data = value;			invalidateProperties();		}						////////////////////////////////////////////////////////////////////////////////////////		// Event Handlers                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/* eat keyboard events, the underlying list will handle them */		override protected function keyDownHandler(event:KeyboardEvent):void		{		}			/* eat keyboard events, the underlying list will handle them */		override protected function keyUpHandler(event:KeyboardEvent):void		{		}			/* eat mouse events, the underlying list will handle them */		override protected function clickHandler(event:MouseEvent):void		{		}						////////////////////////////////////////////////////////////////////////////////////////		// Private Methods                                                                    //		////////////////////////////////////////////////////////////////////////////////////////				override protected function commitProperties():void		{			super.commitProperties();			if (owner is ListBase) selected = ListBase(owner).isItemSelected(data);		}						/**		 * Center the checkbox if we're in a DataGrid		 */		override protected function updateDisplayList(w:Number, h:Number):void		{			super.updateDisplayList(w, h);						if (listData is DataGridListData)			{				var n:int = numChildren;				for (var i:int = 0; i < n; i++)				{					var c:DisplayObject = getChildAt(i);					if (!(c is TextField))					{						c.x = (w - c.width) / 2;						c.y = 0;					}				}			}		}	}}