/* * tetragon - Application framework for Flash, Flash/AIR, Flex & Flex/AIR. *  * Licensed under the MIT License * Copyright (c) 2008-2009 Sascha Balkau / Hexagon Star Softworks *  * Permission is hereby granted, free of charge, to any person obtaining a copy of * this software and associated documentation files (the "Software"), to deal in * the Software without restriction, including without limitation the rights to * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of * the Software, and to permit persons to whom the Software is furnished to do so, * subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in all * copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */package {	import com.hexagonstar.data.constants.Alignment;	import com.hexagonstar.env.preload.BasicPreloader;	import com.hexagonstar.env.preload.Preloader;	import flash.display.StageAlign;	import flash.display.StageScaleMode;		/**	 * The AppPreloader preloads the application SWF that it is in. This class	 * becomes the root of the SWF by delegation in the App class. After preloading	 * has finished, the App class is instantiated in this class and is notified	 * that the preload process is done (by calling onApplicationPreloaded).	 * 	 * This class extends Preloader which in turn acts as a wrapper for various	 * different preloader implementations. The default used implementation is	 * BasicPreloader.	 * 	 * @author Sascha Balkau	 */	public class AppPreloader extends Preloader	{		/**		 * Creates a new AppPreloader instance. super() must be called with		 * the app's entry class (and package) name as the argument. By		 * default this class name is 'App'.		 */		public function AppPreloader()		{			super();						stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;						preloader = new BasicPreloader(this);			preloader.testMode = true;			preloader.padding = 20;			preloader.horizontalAlignment = Alignment.LEFT;			preloader.verticalAlignment = Alignment.TOP;			preloader.color = 0xFFFFFF;			preloader.fadeOutDelay = 40;						start();		}	}}