/* * rhombus - Application framework for web/desktop-based Flash & Flex projects. *  *  /\ RHOMBUS *  \/ FRAMEWORK *  * Licensed under the MIT License * Copyright (c) 2008 Sascha Balkau / Hexagon Star Softworks *  * Permission is hereby granted, free of charge, to any person obtaining a copy of * this software and associated documentation files (the "Software"), to deal in * the Software without restriction, including without limitation the rights to * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of * the Software, and to permit persons to whom the Software is furnished to do so, * subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in all * copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */package view{	import com.hexagonstar.framework.view.IApplicationUI;	import mx.core.UIComponent;	import flash.events.Event;		/**	 * FlexApplicationUI is the main wrapper for all other display objects in a Flex-based	 * application. It contains the console, the fps monitor and any other Flex display	 * objects.	 * 	 * @author Sascha Balkau	 * @version 1.0.0	 */	public class FlexApplicationUI extends UIComponent implements IApplicationUI	{		////////////////////////////////////////////////////////////////////////////////////////		// Properties                                                                         //		////////////////////////////////////////////////////////////////////////////////////////						////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Creates a new FlexApplicationUI instance.		 */		public function FlexApplicationUI()		{			super();		}						/**		 * Updates the view. This method should be called only if children		 * of the view need to be updated, e.g. after localization has been		 * changed or if the children need to be re-layouted.		 */		public function update():void		{		}						/**		 * Disposes the view to clean up resources that are no longer in use. Normally		 * this is never called here since the ApplicationUI exists during the whole app lifetime.		 */		public function dispose():void		{		}						/**		 * Returns a String Representation of the view.		 * 		 * @return A String Representation of the view.		 */		override public function toString():String		{			return "[FlexApplicationUI]";		}						////////////////////////////////////////////////////////////////////////////////////////		// Getters & Setters                                                                  //		////////////////////////////////////////////////////////////////////////////////////////						////////////////////////////////////////////////////////////////////////////////////////		// Event Handlers                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Called after Main broadcasts the application initialized event.		 * @private		 */		protected function onAppInitialized(e:Event):void		{		}						////////////////////////////////////////////////////////////////////////////////////////		// Private Methods                                                                    //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * @private		 */		protected function createFPSMonitor():void		{			// TODO		}						/**		 * @private		 */		protected function createConsole():void		{			// TODO		}	}}