/* * hexcomps * Copyright (C) 2007 Hexagon Star Softworks * * ``The contents of this file are subject to the Mozilla Public License * Version 1.1 (the "License"); you may not use this file except in * compliance with the License. You may obtain a copy of the License at * http://www.mozilla.org/MPL/ * * Software distributed under the License is distributed on an "AS IS" * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the * License for the specific language governing rights and limitations * under the License. */package com.hexagonstar.flex.controls{	import mx.containers.Form;	import mx.containers.FormItem;	import mx.core.UIComponent;		/**	 * FlexForm Class	 * 	 * Extended Form Class that adds a addItem method.	 * 	 * @author Sascha Balkau	 */	public class FlexForm extends Form	{		////////////////////////////////////////////////////////////////////////////////////////		// Properties                                                                         //		////////////////////////////////////////////////////////////////////////////////////////						////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Creates a new FlexForm instance.		 */		public function FlexForm()		{			super();		}						/**		 * addItem		 */		public function addItem(label:String, item:UIComponent):void		{			var formItem:FormItem = new FormItem();			formItem.styleName = "flexFormItem";			formItem.percentWidth = 100;			formItem.label = label;			addChild(formItem);			item.percentWidth = 100;			formItem.addChild(item);		}						////////////////////////////////////////////////////////////////////////////////////////		// Getters & Setters                                                                  //		////////////////////////////////////////////////////////////////////////////////////////						////////////////////////////////////////////////////////////////////////////////////////		// Event Handlers                                                                     //		////////////////////////////////////////////////////////////////////////////////////////						////////////////////////////////////////////////////////////////////////////////////////		// Private Methods                                                                    //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * createChildren		 * @private		 */		override protected function createChildren():void		{			super.createChildren();						percentWidth = 100;						setStyle("paddingTop", 0);			setStyle("paddingBottom", 0);			setStyle("paddingLeft", 0);			setStyle("paddingRight", 0);		}	}}