/* * hexcomps * Copyright (C) 2007 Hexagon Star Softworks * * ``The contents of this file are subject to the Mozilla Public License * Version 1.1 (the "License"); you may not use this file except in * compliance with the License. You may obtain a copy of the License at * http://www.mozilla.org/MPL/ * * Software distributed under the License is distributed on an "AS IS" * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the * License for the specific language governing rights and limitations * under the License. */package com.hexagonstar.flex.controls.collapsibleSectionClasses{	import mx.containers.Canvas;	import mx.containers.HBox;	import mx.controls.HRule;		import flash.events.Event;	import flash.events.MouseEvent;			/**	 * SectionHeader Class	 * @author Sascha Balkau	 */	public class SectionHeader extends HBox	{		////////////////////////////////////////////////////////////////////////////////////////		// Constants                                                                          //		////////////////////////////////////////////////////////////////////////////////////////				public static const CLICK:String = "headerClick";						////////////////////////////////////////////////////////////////////////////////////////		// Properties                                                                         //		////////////////////////////////////////////////////////////////////////////////////////				protected var _sectionLabel:SectionLabel;				////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Creates a new SectionHeader instance.		 */		public function SectionHeader()		{			super();		}						////////////////////////////////////////////////////////////////////////////////////////		// Getters & Setters                                                                  //		////////////////////////////////////////////////////////////////////////////////////////						////////////////////////////////////////////////////////////////////////////////////////		// Event Handlers                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				public function onMouseOver(e:MouseEvent = null):void		{			useHandCursor = true;		}						public function onMouseOut(e:MouseEvent = null):void		{			useHandCursor = false;		}						public function onClick(e:MouseEvent = null):void		{			dispatchEvent(new Event(CLICK));		}						////////////////////////////////////////////////////////////////////////////////////////		// Private Methods                                                                    //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * createChildren		 * @private		 */		override protected function createChildren():void		{			super.createChildren();						percentWidth = 100;						//_arrow = new FlexButton();			//addChild(_arrow);						_sectionLabel = new SectionLabel();			_sectionLabel.label = label;			_sectionLabel.buttonMode = true;			_sectionLabel.mouseChildren = false;			_sectionLabel.addEventListener(MouseEvent.MOUSE_OVER, onMouseOver);			_sectionLabel.addEventListener(MouseEvent.MOUSE_OUT, onMouseOut);			_sectionLabel.addEventListener(MouseEvent.CLICK, onClick);			addChild(_sectionLabel);						var canvas:Canvas = new Canvas();			canvas.percentWidth = 100;			canvas.percentHeight = 100;			addChild(canvas);			var rule:HRule = new HRule();			rule.styleName = "sectionDividerRule";			rule.percentWidth = 100;			canvas.addChild(rule);		}	}}