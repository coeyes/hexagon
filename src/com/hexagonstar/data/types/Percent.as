/* * hexagonlib - Multi-Purpose ActionScript 3 Library. *       __    __ *    __/  \__/  \__    __ *   /  \__/HEXAGON \__/  \ *   \__/  \__/  LIBRARY _/ *            \__/  \__/ * * Licensed under the MIT License *  * Copyright (c) 2007-2008 Sascha Balkau / Hexagon Star Softworks *  * Permission is hereby granted, free of charge, to any person obtaining a copy of * this software and associated documentation files (the "Software"), to deal in * the Software without restriction, including without limitation the rights to * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of * the Software, and to permit persons to whom the Software is furnished to do so, * subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in all * copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */package com.hexagonstar.data.types{	/**	 * Creates a standardized way of describing and storing percentages. You can store	 * and receive percentages in two different formats; regular percentage or as an	 * decimal percentage. If percent is 37.5% a regular percentage would be expressed	 * as 37.5 while the decimal percentage will be expressed 0.375.	 */	public class Percent	{		////////////////////////////////////////////////////////////////////////////////////////		// Properties                                                                         //		////////////////////////////////////////////////////////////////////////////////////////				protected var _percent:Number;						////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Creates a new Percent.		 * 		 * @param percentage Percent formated at a percentage or an decimal percentage.		 * @param isDecimalPercentage Indicates if the parameter percentage is a decimal		 *         percentage (true), or regular percentage (false).		 */		public function Percent(percentage:Number = 0, isDecimalPercentage:Boolean = true)		{			if (isDecimalPercentage) 				decimalPercentage = percentage;			else 				percentage = percentage;		}						/**		 * Determines if the percent specified in the percent parameter is equal to		 * this percent object.		 * 		 * @param percent A Percent object.		 * @return true if percents are identical; otherwise false.		 */		public function equals(percent:Percent):Boolean 		{			return decimalPercentage == percent.decimalPercentage;		}						/**		 * Clones the Percent object.		 * 		 * @return A new percent object with the same value as this percent.		 */		public function clone():Percent 		{			return new Percent(decimalPercentage);		}						/**		 * Returns a String Representation of Percent.		 * 		 * @return A String Representation of Percent.		 */		public function toString():String		{			return decimalPercentage.toString();		}						////////////////////////////////////////////////////////////////////////////////////////		// Getters & Setters                                                                  //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * The percent expressed as a regular percentage. 37.5% would be expressed as 37.5.		 */		public function get percentage():Number		{			return 100 * _percent;		}				public function set percentage(v:Number):void		{			_percent = v * .01;		}				/**		 * The percent expressed as a decimal percentage. 37.5% would be expressed as 0.375.		 */		public function get decimalPercentage():Number		{			return _percent;		}				public function set decimalPercentage(v:Number):void		{			_percent = v;		}	}}