/* * hexagon framework - Multi-Purpose ActionScript 3 Framework. * Copyright (C) 2007 Hexagon Star Softworks *       __    __ *    __/  \__/  \__    __ *   /  \__/HEXAGON \__/  \ *   \__/  \__/ FRAMEWORK_/ *            \__/  \__/ * * ``The contents of this file are subject to the Mozilla Public License * Version 1.1 (the "License"); you may not use this file except in * compliance with the License. You may obtain a copy of the License at * http://www.mozilla.org/MPL/ * * Software distributed under the License is distributed on an "AS IS" * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the * License for the specific language governing rights and limitations * under the License. */package com.hexagonstar.io.file.types{	import com.hexagonstar.env.exception.DataStructureException;			/**	 * TileSetFile class	 */	public class TileSetFile extends BinaryFile implements IFile	{		////////////////////////////////////////////////////////////////////////////////////////		// Properties                                                                         //		////////////////////////////////////////////////////////////////////////////////////////								////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Creates a new TileSetFile instance.		 * 		 * @param path The path of the TileSet File.		 */		public function TileSetFile(path:String = "")		{			super(path);		}						////////////////////////////////////////////////////////////////////////////////////////		// Getters & Setters                                                                  //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Returns the file path of the image file used for the tiles		 * if the tileset file uses an external file for it.		 * 		 * @return The path String for the used tile image file.		 * 		 * @throws com.hexagonstar.env.exception.data.DataStructureException if		 *         the file data could not be converted to XML.		 */		public function get imagePath():String		{			var xml:XML;			try			{				xml = new XML((content as String).toString());			}			catch (e:Error)			{				throw new DataStructureException("The TileSetFile has no valid XML content.");			}						// TODO Accessing this XML node needs to be improved!			return xml["tileset"].@image.toString();		}						override public function get fileTypeID():int		{			return FileTypeIndex.TILESET_FILE_ID;		}	}}