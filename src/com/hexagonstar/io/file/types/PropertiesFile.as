/* * hexagon framework - Multi-Purpose ActionScript 3 Framework. * Copyright (C) 2007 Hexagon Star Softworks *       __    __ *    __/  \__/  \__    __ *   /  \__/HEXAGON \__/  \ *   \__/  \__/ FRAMEWORK_/ *            \__/  \__/ * * ``The contents of this file are subject to the Mozilla Public License * Version 1.1 (the "License"); you may not use this file except in * compliance with the License. You may obtain a copy of the License at * http://www.mozilla.org/MPL/ * * Software distributed under the License is distributed on an "AS IS" * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the * License for the specific language governing rights and limitations * under the License. */package com.hexagonstar.io.file.types{	import com.hexagonstar.data.structures.properties.IProperties;	import com.hexagonstar.data.structures.properties.PropertiesParser;	import com.hexagonstar.data.structures.properties.SimpleProperties;			/**	 * PropertiesFile class	 */	public class PropertiesFile extends TextFile implements IFile	{		////////////////////////////////////////////////////////////////////////////////////////		// Properties                                                                         //		////////////////////////////////////////////////////////////////////////////////////////				private var _properties:IProperties;						////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Creates a new PropertiesFile instance.		 * 		 * @param path The path of the Properties File.		 */		public function PropertiesFile(path:String = "")		{			super(path);			_properties = new SimpleProperties();		}						////////////////////////////////////////////////////////////////////////////////////////		// Getters & Setters                                                                  //		////////////////////////////////////////////////////////////////////////////////////////				public function get contentAsProperties():IProperties		{			if (!_properties)				_properties = new PropertiesParser().parse(_content);						return _properties;		}						override public function get fileTypeID():int		{			return FileTypeIndex.PROPERTIES_FILE_ID;		}	}}