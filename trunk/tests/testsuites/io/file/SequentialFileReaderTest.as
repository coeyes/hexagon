/* * hexagon framework - Multi-Purpose ActionScript 3 Framework. * Copyright (C) 2007 Hexagon Star Softworks *       __    __ *    __/  \__/  \__    __ *   /  \__/HEXAGON \__/  \ *   \__/  \__/ FRAMEWORK_/ *            \__/  \__/ * * ``The contents of this file are subject to the Mozilla Public License * Version 1.1 (the "License"); you may not use this file except in * compliance with the License. You may obtain a copy of the License at * http://www.mozilla.org/MPL/ * * Software distributed under the License is distributed on an "AS IS" * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the * License for the specific language governing rights and limitations * under the License. */package testsuites.io.file{	import com.hexagonstar.io.file.types.BinaryFile;		import com.hexagonstar.data.structures.queues.LinearQueue;			import flexunit.framework.*;		import com.hexagonstar.io.file.SequentialFileReader;	import com.hexagonstar.util.debug.Debug;			public class SequentialFileReaderTest extends TestCase	{				private var _fileReader:SequentialFileReader;				//--------------------------------------------------------------------------------------				public function SequentialFileReaderTest(name:String = null)		{			super(name);		}						override public function setUp():void		{			Assert.resetAssertionsMade();		}            		//--------------------------------------------------------------------------------------      		public function testAll():void		{			Debug.trace("\n\n*******************************************************\n"				+ "SequentialFileReaderTest"				+ "\n*******************************************************");						create();		}						private function log(title:String = ""):void		{			if (title.length > 0)			{				logTitle(title);			}			else			{				Debug.delimiter();			}						Debug.trace();		}				private function logTitle(title:String = ""):void		{			Debug.trace("\n\n========================================\n"				+ "SequentialFileReaderTest " + title				+ "\n========================================");		}						//--------------------------------------------------------------------------------------				private function create():void		{			logTitle("create");						/* Create queue with files in it */			var queue:LinearQueue = new LinearQueue();			queue.enqueue(new BinaryFile("testfiles/imagefile_01.jpg"));			queue.enqueue(new BinaryFile("testfiles/imagefile_02.jpg"));			queue.enqueue(new BinaryFile("testfiles/imagefile_03.jpg"));			queue.enqueue(new BinaryFile("testfiles/imagefile_04.jpg"));			queue.enqueue(new BinaryFile("testfiles/imagefile_05.jpg"));			Debug.trace(queue.dump());						_fileReader = new SequentialFileReader(queue);		}	}}