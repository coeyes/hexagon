/* * hexagon framework - Multi-Purpose ActionScript 3 Framework. * Copyright (C) 2007 Hexagon Star Softworks *       __    __ *    __/  \__/  \__    __ *   /  \__/HEXAGON \__/  \ *   \__/  \__/ FRAMEWORK_/ *            \__/  \__/ * * ``The contents of this file are subject to the Mozilla Public License * Version 1.1 (the "License"); you may not use this file except in * compliance with the License. You may obtain a copy of the License at * http://www.mozilla.org/MPL/ * * Software distributed under the License is distributed on an "AS IS" * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the * License for the specific language governing rights and limitations * under the License. */package com.hexagonstar.io.file.types{	import com.hexagonstar.data.types.Byte;	import com.hexagonstar.io.file.FileErrorStatus;		import flash.utils.ByteArray;			/**	 * XMLFile class	 */	public class XMLFile extends TextFile implements IFile	{		////////////////////////////////////////////////////////////////////////////////////////		// Properties                                                                         //		////////////////////////////////////////////////////////////////////////////////////////				private var _xml:XML;						////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Creates a new XMLFile instance.		 * 		 * @param path The path to the XML File.		 */		public function XMLFile(path:String = "")		{			super(path);			_xml = new XML();		}						////////////////////////////////////////////////////////////////////////////////////////		// Getters & Setters                                                                  //		////////////////////////////////////////////////////////////////////////////////////////				override public function get content():*		{			return contentAsXML;		}						override public function set content(v:*):void		{			try			{				_xml = new XML(v);				_isValid = true;				_errorStatus = FileErrorStatus.OK;			}			catch (e:Error)			{				_isValid = false;				_errorStatus = e.toString();			}						if (_isValid) _size = new Byte(_xml.length());		}						override public function get contentAsBinary():ByteArray		{			var result:ByteArray = new ByteArray();			result.writeUTFBytes(_xml.toString());			result.position = 0;			return result;		}				override public function get contentAsString():String		{			return _xml.toString();		}						public function get contentAsXML():XML		{			return _xml;		}						override public function get fileTypeID():int		{			return FileTypeIndex.XML_FILE_ID;		}	}}