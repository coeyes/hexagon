/* * hexagonlib - Multi-Purpose ActionScript 3 Library. *       __    __ *    __/  \__/  \__    __ *   /  \__/HEXAGON \__/  \ *   \__/  \__/  LIBRARY _/ *            \__/  \__/ * * Licensed under the MIT License *  * Copyright (c) 2007-2008 Sascha Balkau / Hexagon Star Softworks *  * Permission is hereby granted, free of charge, to any person obtaining a copy of * this software and associated documentation files (the "Software"), to deal in * the Software without restriction, including without limitation the rights to * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of * the Software, and to permit persons to whom the Software is furnished to do so, * subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in all * copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */package com.hexagonstar.ui.controls{	import flash.display.DisplayObject;		import flash.text.TextField;			import com.hexagonstar.ui.managers.IFocusManagerComponent;		import com.hexagonstar.ui.core.HUIComponent;				[Event(name="change", type="flash.events.Event")]	[Event(name="textInput", type="flash.events.TextEvent")]	[Event(name="enter", type="com.hexagonstar.env.event.ComponentEvent")]	[Event(name="scroll", type="com.hexagonstar.env.event.ScrollEvent")]		[Style(name="upSkin", type="Class")]	[Style(name="disabledSkin", type="Class")]	[Style(name="textPadding", type="Number", format="Length")]	[Style(name="embedFonts", type="Boolean")]			/**	 * The TextArea component is a multiline text field with a border	 * and optional scroll bars. The TextArea component supports	 * the HTML rendering capabilities of Adobe Flash Player.	 *	 * @see TextInput	 */	public class TextArea extends HUIComponent implements IFocusManagerComponent	{		////////////////////////////////////////////////////////////////////////////////////////		// Constants                                                                          //		////////////////////////////////////////////////////////////////////////////////////////				protected static const SCROLL_BAR_STYLES:Object =		{			downArrowDisabledSkin: "downArrowDisabledSkin",			downArrowDownSkin: "downArrowDownSkin",			downArrowOverSkin: "downArrowOverSkin",			downArrowUpSkin: "downArrowUpSkin",			upArrowDisabledSkin: "upArrowDisabledSkin",			upArrowDownSkin: "upArrowDownSkin",			upArrowOverSkin: "upArrowOverSkin",			upArrowUpSkin: "upArrowUpSkin",			thumbDisabledSkin: "thumbDisabledSkin",			thumbDownSkin: "thumbDownSkin",			thumbOverSkin: "thumbOverSkin",			thumbUpSkin: "thumbUpSkin",			thumbIcon: "thumbIcon",			trackDisabledSkin: "trackDisabledSkin",			trackDownSkin: "trackDownSkin",			trackOverSkin: "trackOverSkin",			trackUpSkin: "trackUpSkin",			repeatDelay: "repeatDelay",			repeatInterval: "repeatInterval"		};						////////////////////////////////////////////////////////////////////////////////////////		// Properties                                                                         //		////////////////////////////////////////////////////////////////////////////////////////				protected var _tf:TextField;		protected var _bg:DisplayObject;		protected var _horizontalScrollPolicy:String = ScrollPolicy.AUTO;		protected var _verticalScrollPolicy:String = ScrollPolicy.AUTO;		//protected var _horizontalScrollBar:UIScrollBar;		//protected var _verticalScrollBar:UIScrollBar;				protected var _savedHTML:String;				protected var _isWordWrap:Boolean = true;		protected var _isEditable:Boolean = true;		protected var _isHTML:Boolean = false;		protected var _textHasChanged:Boolean = false;				private static var _defaultStyles:Object =		{			upSkin: "TextArea_upSkin",			disabledSkin: "TextArea_disabledSkin",			focusRectSkin: null,			focusRectPadding: null,			textFormat: null,			disabledTextFormat: null,			textPadding: 3,			embedFonts: false		};						////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Creates a new TextArea instance.		 */		public function TextArea()		{			super();		}						////////////////////////////////////////////////////////////////////////////////////////		// Getters & Setters                                                                  //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * @copy com.hexagonstar.ui.core.HUIComponent#getStyleDefinition()		 *		 * @see com.hexagonstar.ui.core.HUIComponent#getStyle() HUIComponent#getStyle()		 * @see com.hexagonstar.ui.core.HUIComponent#setStyle() HUIComponent#setStyle()		 * @see com.hexagonstar.ui.managers.StyleManager StyleManager		 */		//public static function get styleDefinition():Object		//{		//	return HUIComponent.mergeStyles(_defaultStyles, ScrollBar.getStyleDefinition());		//}						////////////////////////////////////////////////////////////////////////////////////////		// Event Handlers                                                                     //		////////////////////////////////////////////////////////////////////////////////////////						////////////////////////////////////////////////////////////////////////////////////////		// Private Methods                                                                    //		////////////////////////////////////////////////////////////////////////////////////////			}}