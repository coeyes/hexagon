/* * hexagonlib - Multi-Purpose ActionScript 3 Library. *       __    __ *    __/  \__/  \__    __ *   /  \__/HEXAGON \__/  \ *   \__/  \__/  LIBRARY _/ *            \__/  \__/ * * Licensed under the MIT License *  * Copyright (c) 2007-2008 Sascha Balkau / Hexagon Star Softworks *  * Permission is hereby granted, free of charge, to any person obtaining a copy of * this software and associated documentation files (the "Software"), to deal in * the Software without restriction, including without limitation the rights to * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of * the Software, and to permit persons to whom the Software is furnished to do so, * subject to the following conditions: *  * The above copyright notice and this permission notice shall be included in all * copies or substantial portions of the Software. *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */package com.hexagonstar.game.tile{	import com.hexagonstar.data.structures.grids.Grid2D;	import com.hexagonstar.game.tile.ds.PropertyMap;		import flash.display.BitmapData;	import flash.display.Sprite;			/**	 * TileLayer Class	 */	public class TileLayer extends Sprite	{		////////////////////////////////////////////////////////////////////////////////////////		// Properties                                                                         //		////////////////////////////////////////////////////////////////////////////////////////				protected var _index:int;		protected var _name:String;		protected var _tileSetID:String;		protected var _tileAnimFPS:int;		protected var _properties:PropertyMap;		protected var _grid:Grid2D;				protected var _bitmap:BitmapData;						////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Creates a new TileLayer instance.		 */		public function TileLayer()		{			_properties = new PropertyMap(10);		}				/**		 * Adds a new Layer Property to the Layer.		 * 		 * @param id The property ID.		 * @param value The value of the property.		 */		public function addProperty(id:String, value:*):void		{			_properties.put(id, value);		}						/**		 * Sets the Grid data that is used by the layer. This must be set before		 * the layer can be used.		 * 		 * @param array A 2D Array whose values must be integers and will		 * be used to populate the layers' grid. The Grid will automatically		 * receive the width and height from the 2D array.		 */		public function setGridData(array:Array):void		{			_grid = new Grid2D();			_grid.fromArray(array);		}						/**		 * Returns a String Representation of TileLayer.		 * @return A String Representation of TileLayer.		 */		override public function toString():String		{			return "[TileLayer, index=" + _index + ", layerName=" + _name + "]";		}						////////////////////////////////////////////////////////////////////////////////////////		// Getters & Setters                                                                  //		////////////////////////////////////////////////////////////////////////////////////////				public function get index():int		{			return _index;		}		public function set index(v:int):void		{			_index = v;		}						public function get layerName():String		{			return _name;		}		public function set layerName(v:String):void		{			_name = v;		}						public function get tileSetID():String		{			return _tileSetID;		}		public function set tileSetID(v:String):void		{			_tileSetID = v;		}						public function get tileAnimFPS():int		{			return _tileAnimFPS;		}		public function set tileAnimFPS(v:int):void		{			_tileAnimFPS = v;		}						public function get grid():Grid2D		{			return _grid;		}						////////////////////////////////////////////////////////////////////////////////////////		// Event Handlers                                                                     //		////////////////////////////////////////////////////////////////////////////////////////						////////////////////////////////////////////////////////////////////////////////////////		// Private Methods                                                                    //		////////////////////////////////////////////////////////////////////////////////////////			}}