package com.hexagonstar.framework.command.env{	import com.hexagonstar.framework.Main;	import com.hexagonstar.framework.view.console.Console;	import com.hexagonstar.framework.view.console.FPSMonitor;	import com.hexagonstar.io.key.Key;	import com.hexagonstar.io.key.KeyManager;	import com.hexagonstar.pattern.cmd.Command;		/**	 * InitKeyManagerCommand Class	 * @author Sascha Balkau	 */	public class InitKeyManagerCommand extends Command	{		////////////////////////////////////////////////////////////////////////////////////////		// Public Methods                                                                     //		////////////////////////////////////////////////////////////////////////////////////////				/**		 * Creates a new InitKeyManagerCommand instance.		 */		public function InitKeyManagerCommand()		{			super();		}						/**		 * Execute the command.		 */ 		override public function execute():void		{			super.execute();						var km:KeyManager = KeyManager.instance;			var keyString:String;			km.clearAssignments();						if (Main.config.fpsMonitorEnabled)			{				keyString = Main.config.fpsMonitorKey;				km.assignKeyCombination(Key.getKeyCodes(keyString),					FPSMonitor.instance.toggle);			}						if (Main.config.consoleEnabled)			{				keyString = Main.config.consoleKey;				km.assignKeyCombination(Key.getKeyCodes(keyString),					Console.instance.toggle);			}						complete();		}						////////////////////////////////////////////////////////////////////////////////////////		// Getters & Setters                                                                  //		////////////////////////////////////////////////////////////////////////////////////////				override public function get name():String		{			return "initKeyManager";		}	}}