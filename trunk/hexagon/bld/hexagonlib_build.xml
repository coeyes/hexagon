<?xml version="1.0" encoding="UTF-8"?>
<!--
*********************************************************************************************
	Buildfile for SWC files
*********************************************************************************************
-->
<project name="hexagonlib" default="init" basedir="..">
	
	<!-- application information -->
	<property name="app.name"			value="hexagonlib"/>
	<property name="app.version"		value="0.3.0"/>
	<property name="app.releasestage"	value="beta"/>
	<property name="app.copyright"	value="Copyright(c) Hexagon Star Softworks"/>
	
	<!-- swc properties -->
	<property name="swc.targetname.air"	value="hexagonlib_air.swc"/>
	<property name="swc.targetname.flash"	value="hexagonlib_flash.swc"/>
	<property name="swc.targetname.flex"	value="hexagonlib_flex.swc"/>
	
	<!-- version of the used flex sdk -->
	<property name="sdk.version"		value="3.4.0"/>
	
	<!-- version of the targetted flash player -->
	<property name="fpv.version"		value="10.0.0"/>
	
	<!-- default project folders -->
	<property name="path.src"			value="${basedir}/src/hexagonlib"/>
	<property name="path.src.air"		value="${path.src}/air"/>
	<property name="path.src.flash"	value="${path.src}/flash"/>
	<property name="path.src.flex"	value="${path.src}/flex"/>
	<property name="path.swc"			value="${basedir}/swc"/>
	<property name="path.doc"			value="${basedir}/doc"/>
	
	<!-- workspace & sdk pathes -->
	<property name="workspace"		value="${eclipse.workspace}"/>
	<property name="flex.sdk.basepath"	value="C:/Users/sascha/Applications/FlexSDK"/>
	<property name="sdk"				value="${flex.sdk.basepath}/${sdk.version}"/>
	<property name="FLEX_HOME"		value="${sdk}"/>
	<property name="path.asdoc"		value="${sdk}/bin/asdoc.exe"/>
	<property name="path.cfg.flex"	value="${sdk}/frameworks/flex-config.xml"/>
	<property name="path.cfg.air"		value="${sdk}/frameworks/air-config.xml"/>
	<property name="path.buildnumber"	value="bld/hexagonlib_build.number"/>
	
	<!-- flextasks definitions -->
	<taskdef resource="flexTasks.tasks" classpath="${sdk}/ant/lib/flexTasks.jar"/>
	
	
	<!-- ==================================================================================== -->
	<!-- TARGETS                                                                              -->
	<!-- ==================================================================================== -->
	
	<target name="init" description="Does nothing.">
	</target>
	
	
	<target name="swc air" description="Builds the SWC of the hexagonlib AIR branch.">
		<prepareBuild/>
		<echo message="Building hexagonlib AIR SWC ..." level="info"/>
		<compc
			output="${path.swc}/${swc.targetname.air}"
			target-player="${fpv.version}"
			debug="false"
			optimize="true"
		>
			<load-config filename="${path.cfg.air}"/>
			<source-path path-element="${path.src.air}"/>
			<source-path path-element="${path.src.flash}"/>
			<include-sources dir="${path.src.air}" includes="**/*.as"/>
		</compc>
	</target>
	
	
	<target name="swc flash" description="Builds the SWC of the hexagonlib Flash branch.">
		<prepareBuild/>
		<echo message="Building hexagonlib Flash SWC ..." level="info"/>
		<compc
			output="${path.swc}/${swc.targetname.flash}"
			target-player="${fpv.version}"
			debug="false"
			optimize="true"
			strict="true"
		>
			<load-config filename="${path.cfg.flex}"/>
			<source-path path-element="${path.src.flash}"/>
			<include-sources dir="${path.src.flash}" includes="**/*.as"/>
		</compc>
	</target>
	
	
	<target name="swc flex" description="Builds the SWC of the hexagonlib Flex branch.">
		<prepareBuild/>
		<echo message="Building hexagonlib Flex SWC ..." level="info"/>
		<compc
			output="${path.swc}/${swc.targetname.flex}"
			target-player="${fpv.version}"
			debug="false"
			optimize="true"
		>
			<load-config filename="${path.cfg.flex}"/>
			<source-path path-element="${path.src.flex}"/>
			<source-path path-element="${path.src.flash}"/>
			<include-sources dir="${path.src.flex}" includes="**/*.as"/>
		</compc>
	</target>
	
	
	<target name="docs" description="Generates the docs for the hexagonlib.">
		<echo message="Generating hexagonlib docs ..." level="info"/>
		<exec executable="${path.asdoc}" spawn="false">
			<arg value="-source-path"/>
			<arg path="${path.src.flash}"/>
			<arg value="-doc-sources"/>
			<arg path="${path.src.flash}"/>
			<arg value="-main-title"/>
			<arg path="hexagonlib API Documentation"/>
			<arg value="-window-title"/>
			<arg path="hexagonlib API Documentation"/>
			<arg value="-output"/>
			<arg path="${path.doc}/hexagonlib"/>
			<arg line="-target-player=${fpv.version}"/>
		</exec>
	</target>
	
	
	<!-- ==================================================================================== -->
	<!-- MACRODEFS                                                                            -->
	<!-- ==================================================================================== -->
	
	<macrodef name="prepareBuild">
		<sequential>
			<buildnumber file="${path.buildnumber}"/>
			<tstamp>
				<format property="build.date" pattern="dd-MMMM-yyyy HH:mm" unit="minute" locale="en"/>
			</tstamp>
			<echo message="*** ${ant.project.name} version: ${app.version} build #${build.number}, ${build.date} ***" level="info"/>
			<generateAppInfo buildnr="${build.number}" builddate="${build.date}" releasestage="${app.releasestage}"/>
		</sequential>
	</macrodef>
	
	
	<macrodef name="generateAppInfo">
		<attribute name="buildnr" default=""/>
		<attribute name="builddate" default=""/>
		<attribute name="releasestage" default=""/>
		<sequential>
			<echo message="Generating HexagonLib.as ..." level="info"/>
			<echo file="${path.src.flash}/com/hexagonstar/HexagonLib.as" append="false"><![CDATA[/*
 * hexagonlib - Multi-Purpose ActionScript 3 Library.
 *       __    __
 *    __/  \__/  \__    __
 *   /  \__/HEXAGON \__/  \
 *   \__/  \__/  LIBRARY _/
 *            \__/  \__/
 *
 * Licensed under the MIT License
 * 
 * Copyright (c) 2007-2008 Sascha Balkau / Hexagon Star Softworks
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
package com.hexagonstar
{
	/**
	 * Contains constants that describe version information about the library.
	 */
	public class HexagonLib
	{
		////////////////////////////////////////////////////////////////////////////////////////
		// Constants                                                                          //
		////////////////////////////////////////////////////////////////////////////////////////
		
		public static const NAME:String			= "${app.name}";
		public static const VERSION:String		= "${app.version}";
		public static const BUILD:String			= "@{buildnr}";
		public static const RELEASE_STAGE:String	= "@{releasestage}";
		public static const DATE:String			= "@{builddate}";
		public static const COPYRIGHT:String		= "${app.copyright}";
	}
}]]>
</echo>
		</sequential>
	</macrodef>
	
</project>
