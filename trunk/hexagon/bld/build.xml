<?xml version="1.0" encoding="UTF-8"?>
<!--
***************************************************************************************************
	Buildfile for rhombus framework-based applications -  Version 1.1
	
	rhombus - Application framework for web/desktop-based Flash & Flex projects.
	
	/\ RHOMBUS
	\/ FRAMEWORK
 
	Licensed under the MIT License
	Copyright (c) 2008 Sascha Balkau / Hexagon Star Softworks
	
	
	IMPORTANT: Before using this build file the following properties should be defined in
	Eclipse under Preferences/Ant/Runtime/Properties (replace substitutions in [] with
	correct paths on your system):
	
		eclipse.workspace = ${workspace_loc}
		flex.sdk.basepath = [your/flex/sdk/base/path]
		web.browser = [path/to/your/webbrowser.exe]
	
	Additionally for publishing AIR applications you need to set:
	
		air.certificate.path = [path/to/your/air/certificate/file]
		air.certificate.password = [yourAIRCertificatePassword]
	
***************************************************************************************************
-->
<project name="rhombus app" default="init" basedir="..">
	
	<!-- ====================================================================================== -->
	<!-- Project-specific Settings                                                              -->
	<!-- ====================================================================================== -->
	
	<!-- General Application Information -->
	<property name="app.id"			value="com.hexagonstar.rhombus.app"/>
	<property name="app.name"			value="rhombus app"/>
	<property name="app.version"		value="1.0.0"/>
	<property name="app.releasestage"	value="beta"/>
	<property name="app.copyright"	value="Hexagon Star Softworks"/>
	<property name="app.year"			value="2009"/>
	<property name="app.website"		value="http://www.hexagonstar.com/"/>
	<property name="app.language"		value="EN"/>
	<property name="app.description"	value=""/>
	
	<!-- SWF Properties -->
	<property name="swf.bgcolor"		value="0x000000"/>
	<property name="swf.framerate"	value="60"/>
	<property name="swf.width"		value="1024"/>
	<property name="swf.height"		value="640"/>
	<property name="swf.targetname"	value="app.swf"/>
	<property name="swf.htmlwrapper"	value="index.html"/>
	
	<!-- SWF Meta Tags -->
	<property name="meta.title"		value="${app.name}"/>
	<property name="meta.description"	value="${app.description}"/>
	<property name="meta.publisher"	value="${app.copyright}"/>
	<property name="meta.creator"		value="${app.copyright}"/>
	<property name="meta.contributor"	value="${app.copyright}"/>
	
	<!-- AIR-only Application Properties -->
	<property name="air.windowtitle"	value="Rhombus Application"/>
	<property name="air.filename"		value="app"/>
	<property name="air.minimizable"	value="true"/>
	<property name="air.maximizable"	value="true"/>
	<property name="air.resizable"	value="true"/>
	<property name="air.minsize"		value="640 480"/>
	<property name="air.targetname"	value="rhombus_app.air"/>
	
	<!-- Version of the targetted Flex SDK -->
	<property name="sdk.version"		value="3.4.0"/>
	
	<!-- Version of the targetted Flash or AIR Runtime -->
	<property name="fpv.version"		value="10.0.0"/>
	<property name="air.version"		value="1.5"/>
	
	<!-- Default Project Folders (path.bin.fp is used for Flash Player launch) -->
	<!-- Change path.src to "${basedir}/src" when using in your own project!   -->
	<property name="path.src"			value="${basedir}/src/rhombus/app"/>
	<property name="path.bin"			value="${basedir}/bin"/>
	<property name="path.bin.fp"		value="${basedir}\\bin\\"/>
	<property name="path.pub"			value="${basedir}/pub"/>
	
	<!-- Advanced Compiler Options -->
	<property name="max.recursiondepth"	value="1000"/>
	<property name="max.executiontime"	value="60"/>
	
	
	<!-- ====================================================================================== -->
	<!-- Default References & Paths                                                               -->
	<!-- ====================================================================================== -->
	
	<!-- Default Class Names (these should not be changed!) -->
	<property name="class.app.flash"	value="App.as"/>
	<property name="class.app.air"	value="AppAIR.as"/>
	<property name="class.app.flex"	value="App.mxml"/>
	
	<!-- Eclipse Workspace Reference -->
	<property name="workspace"				  value="${eclipse.workspace}"/>
	
	<!-- External Source Paths. You can define any additional source paths here but you  -->
	<!-- also need to reference them in the 'compile' MacroDef under Source Paths.       -->
	<property name="path.src.hexagon"			  value="${workspace}/com.hexagonstar.hexagon/src"/>
	<property name="path.src.hexagonlib.air"	  value="${path.src.hexagon}/hexagonlib/air"/>
	<property name="path.src.hexagonlib.flash"  value="${path.src.hexagon}/hexagonlib/flash"/>
	<property name="path.src.hexagonlib.flex"	  value="${path.src.hexagon}/hexagonlib/flex"/>
	<property name="path.src.tetragonlib.flash" value="${path.src.hexagon}/tetragonlib/flash"/>
	<property name="path.src.rhombus.framework" value="${path.src.hexagon}/rhombus/framework"/>
	
	<!-- External SWC Paths. Same rules as for Source Paths but for SWC files. -->
	<property name="path.swc.hexagon"	value="${workspace}/com.hexagonstar.hexagon/swc"/>
	<property name="path.swc.alcon"	value="${workspace}/com.hexagonstar.alcon.debug/bin"/>
	
	<!-- Path reference to the library.swc used in the project. -->
	<property name="path.swc.library"	value="${path.src}/assets"/>
	
	<!-- ====================================================================================== -->
	<!-- SDK & Tool References                                                                  -->
	<!-- ====================================================================================== -->
	
	<property name="sdk"					value="${flex.sdk.basepath}/${sdk.version}"/>
	<property name="FLEX_HOME"			value="${sdk}"/>
	<property name="asdoc"				value="${sdk}/bin/asdoc.exe"/>
	<property name="air.debuglauncher"	value="${sdk}/bin/adl.exe"/>
	<property name="air.developertool"	value="${sdk}/lib/adt.jar"/>
	<property name="browser"				value="${web.browser}"/>
	
	<!-- Currently set for Windows only! You might want to adapt this line to your OS! -->
	<property name="player.debug"			value="${sdk}/runtimes/player/10/win/FlashPlayer.exe"/>
	
	<!-- FlexTasks Definitions -->
	<taskdef resource="flexTasks.tasks" classpath="${sdk}/ant/lib/flexTasks.jar"/>
	
	
	<!-- ====================================================================================== -->
	<!-- ANT TARGETS                                                                            -->
	<!-- ====================================================================================== -->
	
	<target name="init" description="Does nothing.">
	</target>
	
	<target name="Flash Compile Debug" description="Compiles a debug version of the Flash Application.">
		<prepareBuild releasetype="web" debug="true"/>
		<compile debug="true" config="flex-config.xml" mainclass="App.as" isflash="true" isflex="false" isair="false"/>
	</target>
	
	<target name="Flash Compile" description="Compiles the Flash Application.">
		<prepareBuild releasetype="web" debug="false"/>
		<compile debug="false" config="flex-config.xml" mainclass="App.as" isflash="true" isflex="false" isair="false"/>
	</target>
	
	<target name="Flex Compile Debug" description="Compiles a debug version of the Flex Application.">
		<prepareBuild releasetype="web" debug="true"/>
		<compile debug="true" config="flex-config.xml" mainclass="App.mxml" isflash="false" isflex="true" isair="false"/>
	</target>
	
	<target name="Flex Compile" description="Compiles the Flex Application.">
		<prepareBuild releasetype="web" debug="false"/>
		<compile debug="false" config="flex-config.xml" mainclass="App.mxml" isflash="false" isflex="true" isair="false"/>
	</target>
	
	<target name="Launch Debug" description="Launches the Flash or Flex Application in debug runtime.">
		<launchFlashDebug/>
	</target>
	
	<target name="Launch" description="Launches the Flash or Flex Application in the browser.">
		<launchFlashRelease/>
	</target>
	
	<target name="Launch AIR" description="Launches the Flash or Flex AIR Application.">
		<LaunchAIR/>
	</target>
	
	<target name="AIR Flash Compile Debug" description="Compiles a debug version of the Flash AIR Application.">
		<prepareBuild releasetype="desktop" debug="true"/>
		<generateAIRDescriptor/>
		<compile debug="true" config="air-config.xml" mainclass="AppAIR.as" isflash="true" isflex="false" isair="true"/>
	</target>
	
	<target name="AIR Flash Compile" description="Compiles the Flash AIR Application.">
		<prepareBuild releasetype="desktop" debug="false"/>
		<generateAIRDescriptor/>
		<compile debug="false" config="air-config.xml" mainclass="AppAIR.as" isflash="true" isflex="false" isair="true"/>
	</target>
	
	<target name="AIR Flex Compile Debug" description="Compiles a debug version of the Flex AIR Application.">
		<prepareBuild releasetype="desktop" debug="true"/>
		<generateAIRDescriptor/>
		<compile debug="true" config="air-config.xml" mainclass="App.mxml" isflash="false" isflex="true" isair="true"/>
	</target>
	
	<target name="AIR Flex Compile" description="Compiles the Flex AIR Application.">
		<prepareBuild releasetype="desktop" debug="false"/>
		<generateAIRDescriptor/>
		<compile debug="false" config="air-config.xml" mainclass="App.mxml" isflash="false" isflex="true" isair="true"/>
	</target>
	
	<target name="Publish AIR" description="Publishes the AIR Application for release.">
		<publishAIR/>
	</target>
	
	
	<!-- ====================================================================================== -->
	<!-- MACRODEFS                                                                              -->
	<!-- ====================================================================================== -->
	
	<macrodef name="prepareBuild">
		<attribute name="releasetype" default="web"/>
		<attribute name="debug" default="true"/>
		<sequential>
			<buildnumber file="bld/build.number"/>
			<tstamp>
				<format property="build.date" pattern="dd-MMMM-yyyy HH:mm" unit="minute" locale="en"/>
			</tstamp>
			<echo message="*** ${ant.project.name} version: ${app.version} build #${build.number} (@{releasetype}), ${build.date} ***" level="info"/>
			<generateAppInfo buildnr="${build.number}" builddate="${build.date}" releasetype="@{releasetype}" debug="@{debug}"/>
		</sequential>
	</macrodef>
	
	<macrodef name="generateAppInfo">
		<attribute name="buildnr" default=""/>
		<attribute name="builddate" default=""/>
		<attribute name="releasetype" default=""/>
		<attribute name="debug" default=""/>
		<sequential>
			<echo message="Generating AppInfo.as ..." level="info"/>
			<echo file="${path.src}/AppInfo.as" append="false"><![CDATA[/*
 * ${ant.project.name} v${app.version}
 * Copyright (c) ${app.copyright}
 */
package
{
	import com.hexagonstar.framework.IAppInfo;
	
	/**************************************************************************
	 * AppInfo
	 * Ant auto-generated application information file.
	 **************************************************************************/
	public final class AppInfo implements IAppInfo
	{
		public function get id():String {return "${app.id}";}
		public function get name():String {return "${app.name}";}
		public function get version():String {return "${app.version}";}
		public function get build():String {return "@{buildnr}";}
		public function get buildDate():String {return "@{builddate}";}
		public function get releaseStage():String {return "${app.releasestage}";}
		public function get releaseType():String {return "@{releasetype}";}
		public function get copyright():String {return "${app.copyright}";}
		public function get publisher():String {return "${meta.publisher}";}
		public function get creator():String {return "${meta.creator}";}
		public function get contributor():String {return "${meta.contributor}";}
		public function get year():String {return "${app.year}";}
		public function get website():String {return "${app.website}";}
		public function get language():String {return "${app.language}";}
		public function get isDebug():Boolean {return @{debug};}
	}
}]]>
</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="generateAIRDescriptor">
		<sequential>
			<echo message="Generating AIR descriptor file ..." level="info"/>
			<echo file="${path.src}/App-app.xml" append="false"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<application xmlns="http://ns.adobe.com/air/application/${air.version}">
	<id>${app.id}</id>
	<filename>${air.filename}</filename>
	<name>${app.name}</name>
	<version>${app.version}.${build.number}</version>
	<description>${app.description}</description>
	<copyright>${app.copyright}</copyright>
	<initialWindow>
		<content>${swf.targetname}</content>
		<title>${air.windowtitle}</title>
		<systemChrome>standard</systemChrome>
		<transparent>false</transparent>
		<visible>false</visible>
		<minimizable>${air.minimizable}</minimizable>
		<maximizable>${air.maximizable}</maximizable>
		<resizable>${air.resizable}</resizable>
		<minSize>${air.minsize}</minSize>
	</initialWindow>
	<installFolder>${meta.publisher}</installFolder>
	<programMenuFolder>${meta.publisher}</programMenuFolder>
	<icon>
		<image16x16>icons/icon_16x16.png</image16x16>
		<image32x32>icons/icon_32x32.png</image32x32>
		<image48x48>icons/icon_48x48.png</image48x48>
		<image128x128>icons/icon_128x128.png</image128x128>
	</icon>
	
	<!-- Whether the application handles the update when a user double-clicks an update version
	of the AIR file (true), or the default AIR application installer handles the update (false).
	Optional. Default false. -->
	<!-- <customUpdateUI></customUpdateUI> -->
	
	<!-- Whether the application can be launched when the user clicks a link in a web browser.
	Optional. Default false. -->
	<!-- <allowBrowserInvocation></allowBrowserInvocation> -->

	<!-- Listing of file types for which the application can register. Optional. -->
	<!-- <fileTypes> -->

		<!-- Defines one file type. Optional. -->
		<!-- <fileType> -->

			<!-- The name that the system displays for the registered file type. Required. -->
			<!-- <name></name> -->

			<!-- The extension to register. Required. -->
			<!-- <extension></extension> -->
			
			<!-- The description of the file type. Optional. -->
			<!-- <description></description> -->
			
			<!-- The MIME content type. -->
			<!-- <contentType></contentType> -->
			
			<!-- The icon to display for the file type. Optional. -->
			<!-- <icon>
				<image16x16></image16x16>
				<image32x32></image32x32>
				<image48x48></image48x48>
				<image128x128></image128x128>
			</icon> -->
			
		<!-- </fileType> -->
	<!-- </fileTypes> -->

</application>]]>
</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="compile">
		<attribute name="debug" default="true"/>
		<attribute name="config" default="flex-config.xml"/>
		<attribute name="mainclass" default="App.as"/>
		<attribute name="isflash" default="true"/>
		<attribute name="isflex" default="false"/>
		<attribute name="isair" default="false"/>
		<sequential>
			<echo message="Compiling ${swf.targetname} for runtime v${fpv.version} ..." level="info"/>
			<mxmlc
				show-unused-type-selector-warnings="false"
				file="${path.src}/@{mainclass}"
				output="${path.bin}/${swf.targetname}"
				incremental="false"
				locale="en_US"
				default-frame-rate="${swf.framerate}"
				default-background-color="${swf.bgcolor}"
				target-player="${fpv.version}"
				debug="@{debug}">
				<load-config filename="${FLEX_HOME}/frameworks/@{config}"/>
				<default-size width="${swf.width}" height="${swf.height}"/>
				<default-script-limits
					max-recursion-depth="${max.recursiondepth}"
					max-execution-time="${max.executiontime}"	/>
				
				<keep-as3-metadata name="TypeHint"/>
				<keep-as3-metadata name="EditorData"/>
				<keep-as3-metadata name="Embed"/>
			
				<metadata
					title="${meta.title}"
					description="${meta.description}"
					date="${build.date}">
					<language code="${app.language}"/>
					<publisher name="${meta.publisher}"/>
					<creator name="${meta.creator}"/>
					<contributor name="${meta.contributor}"/>
				</metadata>
				
				<!-- Conditional Compilation Constant Definitions -->
				<define name="CONFIG::IS_FLASH" value="@{isflash}"/>
				<define name="CONFIG::IS_FLEX" value="@{isflex}"/>
				<define name="CONFIG::IS_AIR" value="@{isair}"/>
				
				<!-- Source Paths -->
				<source-path path-element="${path.src.hexagonlib.air}"/>
				<source-path path-element="${path.src.hexagonlib.flash}"/>
				<source-path path-element="${path.src.hexagonlib.flex}"/>
				<source-path path-element="${path.src.tetragonlib.flash}"/>
				<source-path path-element="${path.src.rhombus.framework}"/>
				
				<!-- Library Paths -->
				<compiler.library-path dir="${path.swc.library}" append="true">
					<include name="library.swc"/>
				</compiler.library-path>
				
				<compiler.library-path dir="${path.swc.alcon}" append="true">
					<include name="alcon.swc"/>
				</compiler.library-path>
				
				<!--<compiler.library-path dir="${path.swc.hexagon}" append="true">
					<include name="hexagonlib_air.swc"/>
				</compiler.library-path> -->
				
				<!--<compiler.library-path dir="${path.swc.hexagon}" append="true">
					<include name="hexagonlib_flash.swc"/>
				</compiler.library-path> -->
				
				<!--<compiler.library-path dir="${path.swc.hexagon}" append="true">
					<include name="hexagonlib_flex.swc"/>
				</compiler.library-path> -->
				
				<!--<compiler.library-path dir="${path.swc.hexagon}" append="true">
					<include name="tetragonlib_flash.swc"/>
				</compiler.library-path> -->
				
			</mxmlc>
		</sequential>
	</macrodef>
	
	<macrodef name="publishAIR">
		<sequential>
			<echo message="Publishing AIR application of ${app.name} ${app.version} ..." level="info"/>
				<java jar="${air.developertool}" fork="true" failonerror="true">
					<arg value="-package"/>
					<arg value="-storetype"/>
					<arg value="pkcs12"/>
					<arg value="-keystore"/>
					<arg value="${air.certificate.path}"/>
					<arg value="-storepass"/>
					<arg value="${air.certificate.password}"/>
					<arg value="${path.pub}/${air.targetname}"/>
					<arg value="/${path.src}/App-app.xml"/>
					<arg value="-C"/>
					<arg value="${path.bin}"/>
					<arg value="${swf.targetname}"/>
					<arg value="-C"/>
					<arg value="${path.bin}"/>
					<arg value="app.ini"/>
					<arg value="-C"/>
					<arg value="${path.bin}"/>
					<arg value="data"/>
					<arg value="-C"/>
					<arg value="${path.bin}"/>
					<arg value="icons"/>
					<arg value="-C"/>
					<arg value="${path.bin}"/>
					<arg value="locale"/>
				</java>
		</sequential>
	</macrodef>
	
	<macrodef name="launchFlashDebug">
		<sequential>
			<echo message="Opening ${swf.targetname} in Flash Player (Debug) ..." level="info"/>
			<exec executable="${player.debug}" spawn="true">
				<arg value="${path.bin.fp}${swf.targetname}"/>
			</exec>
		</sequential>
	</macrodef>
	
	<macrodef name="launchFlashRelease">
		<sequential>
			<echo message="Opening ${swf.targetname} in Web Browser ..." level="info"/>
			<exec executable="${browser}" dir=".." spawn="true">
				<arg value="file://${path.bin}/${swf.htmlwrapper}"/>
			</exec>
		</sequential>
	</macrodef>
	
	<macrodef name="LaunchAIR">
		<sequential>
			<echo message="Opening ${swf.targetname} in AIR Debug Launcher ..." level="info"/>
			<exec executable="${air.debuglauncher}" spawn="true">
				<arg value="${path.src}\App-app.xml"/>
				<arg value="${path.bin}"/>
			</exec>
		</sequential>
	</macrodef>
	
</project>
